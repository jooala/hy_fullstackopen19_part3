{"version":3,"sources":["components/PersonsList.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","event","handleRemove","Persons","persons","filter","toLowerCase","includes","value","map","key","id","PersonForm","onSubmit","addPerson","newName","onChange","handlePerson","newNumber","handleNumber","type","Filter","newFilter","handleFilter","Notification","message","status","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewFilter","setNewNumber","errorMessage","setErrorMessage","notificationStatus","setNotificationStatus","useEffect","console","log","personService","initialPersons","target","preventDefault","setTimeout","personObject","foundPerson","find","window","confirm","updatedPerson","catch","error","returnedPerson","concat","personList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dac056c1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = props => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        {props.person.name} {props.person.number}\r\n        <button onClick={event => props.handleRemove(event, props.person)}>\r\n          delete\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Persons = props =>\r\n  props.persons\r\n    .filter(person =>\r\n      person.name.toLowerCase().includes(props.value.toLowerCase())\r\n    )\r\n    .map(person => (\r\n      <Person\r\n        key={person.id}\r\n        person={person}\r\n        handleRemove={props.handleRemove}\r\n      />\r\n    ));\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handlePerson} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nconst Filter = props => {\r\n  return (\r\n    <div>\r\n      filter shown with{\" \"}\r\n      <input value={props.newFilter} onChange={props.handleFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, status }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  if (status === \"error\") {\r\n    return <div className=\"error\">{message}</div>;\r\n  }\r\n  if (status === \"confirm\") {\r\n    return <div className=\"confirm\">{message}</div>;\r\n  }\r\n};\r\nexport default Notification;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update, \r\n  remove: remove\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/PersonsList\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/Notification\";\r\nimport personService from \"./services/persons\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newFilter, setNewFilter] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [notificationStatus, setNotificationStatus] = useState(null);\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n    setNotificationStatus(\"confirm\");\r\n    setErrorMessage(`Added ${newName}`);\r\n    setTimeout(() => {\r\n      setErrorMessage(null);\r\n    }, 5000);\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n    const foundPerson = persons.find(person => person.name === newName);\r\n    if (foundPerson) {\r\n      window.confirm(\r\n        `${newName} is already added to phonebook., replace the number with a new one?`\r\n      );\r\n      personService\r\n        .update(foundPerson.id, personObject)\r\n        .then(updatedPerson => {\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n          setPersons(\r\n            persons.map(person =>\r\n              person.id !== foundPerson.id ? person : updatedPerson\r\n            )\r\n          );\r\n        })\r\n        .catch(error => {\r\n          setNotificationStatus(\"error\");\r\n          setErrorMessage(\r\n            `Information of ${newName} has already been removed from server`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 5000);\r\n        });\r\n    } else {\r\n      personService.create(personObject).then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n      }).catch(error => {\r\n        console.log(error.response.data)\r\n        setNotificationStatus(\"error\");\r\n          setErrorMessage(\r\n            `${error.response.data.error}`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 5000);\r\n      });\r\n    }\r\n  };\r\n  const handleRemove = (event, person) => {\r\n    event.preventDefault();\r\n    if (window.confirm(`Poistetaanko ${person.name}`)) {\r\n      personService.remove(person.id).then(() => {\r\n        setPersons(persons.filter(personList => personList.id !== person.id));\r\n      });\r\n    }\r\n  };\r\n  const handlePerson = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumber = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    setNewFilter(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    personService.getAll().then(initialPersons => {\r\n      console.log(\"promise fulfilled\");\r\n      setPersons(initialPersons);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} status={notificationStatus} />\r\n      <Filter newFilter={newFilter} handleFilter={handleFilter} />\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        persons={persons}\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handlePerson={handlePerson}\r\n        newNumber={newNumber}\r\n        handleNumber={handleNumber}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        value={newFilter}\r\n        handleRemove={handleRemove}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}